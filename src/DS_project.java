import javax.swing.*;import java.awt.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;//for final presentationpublic class DS_project extends JFrame {	RectPanel rectPanel;	Panels panel;//	PanelEx panelEx;	    public DS_project() {                setTitle("Drawing Board");//        setVisible(true);//        setLayout(null);               setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);        createMenu();        //        rectPanel = new RectPanel();//        add(rectPanel, BorderLayout.NORTH);//여기서 RectPanel추가//        pack();        panel = new Panels();        add(panel);        panel.setLocation(0,0); //0,0으로 하면 안뜸 ;;//        panelEx = new PanelEx();//        add(panelEx);//		panelEx.setLocation(1,0);        setSize(new Dimension(1000,700));        setVisible(true);            }        public static void main(String[] args) {    	new DS_project();    }     // DS_project의 inner class    class MenuActionListener implements ActionListener {     	public void actionPerformed(ActionEvent e) {    		String cmd = e.getActionCommand();    		System.out.println("clicked: "+cmd+", "+e.getSource());    		switch(cmd) { // 메뉴 아이템의 종류 구분    					case "Zoom in":				System.out.println("zoom in should be implemented");break;			case "Zoom out":				System.out.println("zoom out should be implementes");break;							//File menu children			case "Save" :				if(panel!=null) {					panel.saveCanvas();					System.out.println("\t\t***CANVAS SAVE IMAGE***");				}break;			case "Open" :				if(panel!=null) {					panel.openCanvas();					System.out.println("\t\t***CANVAS OPEN IMAGE***");				}break;			case "Clear" :				panel.option = 6;				//현 상태: 캔버스 한번 클릭해야 리셋됨				System.out.println("\t\t***CANVAS RESET***");				break;								//Shape menu children			case "Rectangular" ://				rectPanel.shapeString=cmd;				if(panel.option == 2) panel.option = 0;				else panel.option = 2;				System.out.println("\t\t***RECT DRAWING MODE***");				break;						case "Triangle":				if(panel.option == 3) panel.option = 0;				else panel.option = 3;				System.out.println("triangle drawing should be implemented"); break;						case "Line":				if(panel.option == 1) panel.option = 0;				else panel.option = 1;				System.out.println("\\t\\t***LINE DRAWING MODE***"); break;						case "Draw":				if(panel.option == 5) panel.option = 0;				else panel.option = 5;				System.out.println("\\t\\t***FREE DRAWING MODE***");break;							case "Text":				System.out.println("Text input should be implemented"); break;							case "Image":				System.out.println("image should be"); break;				//			case "1/4 pt" ://				rectPanel.stroke=(float)0.25;//				System.out.println("color stroke 1/4 clicked");//				break;    		}    	}    }    void createMenu() {        JMenuBar mb = new JMenuBar();        MenuActionListener menulistener = new MenuActionListener();//        MenuActionListener shapelistener = new MenuActionListener();//        JToolBar tb = new JToolBar();//        SpinnerNumberModel fontsize = new SpinnerNumberModel(8, 1, 50, 1);//        JSpinner spinner = new JSpinner(fontsize);//        JComboBox combo = new JComboBox<>();//        add(tb);        setJMenuBar(mb);//        tb.setLocation(0, 0);//        tb.setPreferredSize(new Dimension(1000,60));        mb.setBackground(Color.pink);                JMenu[] menus = new JMenu[5];        String[] menunames = {"File", "Shape", "Zoom in", "Zoom out", "Polygon"};                for(int i=0; i<menus.length; i++) {        	menus[i] = new JMenu(menunames[i]);        	        	if(i==menus.length-1) {        		//Shape 안에 Polygon 메뉴 추가(여기에 Rectangular, Triangle 담김)        		menus[1].add(menus[i]);        		menus[1].addSeparator();        		break;        	}        	mb.add(menus[i]);        }        /*        JMenu filemenu = new JMenu("File");        JMenu shapemenu = new JMenu("Shape");        JMenu zoominmenu = new JMenu("Zoom in");        JMenu zoomoutmenu = new JMenu("Zoom out");        mb.add(filemenu);        mb.add(shapemenu);        mb.add(zoominmenu);        mb.add(zoomoutmenu);		*/                //메뉴별 새끼 매뉴들 저장        JMenuItem[] menuchildren = new JMenuItem[9];        String[] childmenunames = {"Save", "Open", "Clear", "Line", "Draw", "Text", "Image", "Rectangular", "Triangle"};                for(int i=0; i<menuchildren.length; i++) {        	menuchildren[i] = new JMenuItem(childmenunames[i]);        	if(i<3) {        		//filemenu에 save, open, clear 메뉴 추가        		menus[0].add(menuchildren[i]);        		menus[0].addSeparator();        	}else if(i>=3 && i<7) {        		//Shape menu에 draw, text, line, image 메뉴 추가        		menus[1].add(menuchildren[i]);        		menus[1].addSeparator();        	}else {        		//Polygon menu에         		menus[4].add(menuchildren[i]);        		menus[4].addSeparator();        	}        	menuchildren[i].addActionListener(menulistener);        }        //        this.setLayout(new FlowLayout());                /*        JMenuItem savemenu = new JMenuItem("Save");        JMenuItem openmenu = new JMenuItem("Open");        JMenuItem clearmenu = new JMenuItem("Clear");        savemenu.addActionListener(menulistener);        openmenu.addActionListener(menulistener);        clearmenu.addActionListener(menulistener);        JMenu shape2menu = new JMenu("Shape");        JMenuItem drawmenu = new JMenuItem("Draw");        JMenuItem textmenu = new JMenuItem("Text");        JMenuItem linemenu = new JMenuItem("Line");        JMenuItem imagemenu = new JMenuItem("Image");        JMenuItem rectangular = new JMenuItem("Rectangluar");        JMenuItem triangle = new JMenuItem("Triangle");        rectangular.addActionListener(menulistener);        shapemenu.add(shape2menu);        shapemenu.add(linemenu);        shapemenu.add(drawmenu);        shapemenu.add(textmenu);        shapemenu.add(imagemenu);        filemenu.add(savemenu);        filemenu.addSeparator();        filemenu.add(openmenu);        filemenu.addSeparator();        filemenu.add(clearmenu);        shape2menu.add(rectangular);        shape2menu.add(triangle);		*///        ImageIcon back = new ImageIcon("folder/back.png");//        ImageIcon back2 = new ImageIcon("folder/back2.png");//        ImageIcon copy = new ImageIcon("folder/copy.png");//        ImageIcon copy2 = new ImageIcon("folder/copy2.png");//        ImageIcon front = new ImageIcon("folder/front.png");//        ImageIcon front2 = new ImageIcon("folder/front2.png");//        ImageIcon paste = new ImageIcon("folder/paste.png");//        ImageIcon paste2 = new ImageIcon("folder/paste2.png");//        ImageIcon leftrotation = new ImageIcon("folder/leftrotation.png");//        ImageIcon leftrotation2 = new ImageIcon("folder/leftrotation2.png");//        ImageIcon rightrotation = new ImageIcon("folder/rightrotation.png");//        ImageIcon rightrotation2 = new ImageIcon("folder/rightrotation2.png");//        ImageIcon color = new ImageIcon("folder/color.png");//        ImageIcon color2 = new ImageIcon("folder/color2.png");//        ImageIcon line = new ImageIcon("folder/line.png");//        ImageIcon line2 = new ImageIcon("folder/line2.png");//        ImageIcon erase = new ImageIcon("folder/erase.png");//        ImageIcon erase2 = new ImageIcon("folder/erase2.png");////        Image[] org_image = new Image[9];//        Image[] ch_image = new Image[9];//        ImageIcon[] org_icon = new ImageIcon[9];//        ImageIcon[] ch_icon = new ImageIcon[9];////        org_image[0] = back.getImage();//        org_image[1] = front.getImage();//        org_image[2] = copy.getImage();//        org_image[3] = paste.getImage();//        org_image[4] = leftrotation.getImage();//        org_image[5] = rightrotation.getImage();//        org_image[6] = color.getImage();//        org_image[7] = line.getImage();//        org_image[8] = erase.getImage();////        ch_image[0] = back2.getImage();//        ch_image[1] = front2.getImage();//        ch_image[2] = copy2.getImage();//        ch_image[3] = paste2.getImage();//        ch_image[4] = leftrotation2.getImage();//        ch_image[5] = rightrotation2.getImage();//        ch_image[6] = color2.getImage();//        ch_image[7] = line2.getImage();//        ch_image[8] = erase2.getImage();////        for (int i = 0; i < org_image.length; i++) {//            org_image[i] = org_image[i].getScaledInstance(40, 40, Image.SCALE_SMOOTH);//        }////        for (int i = 0; i < ch_image.length; i++) {//            ch_image[i] = ch_image[i].getScaledInstance(40, 40, Image.SCALE_SMOOTH);//        }////        for (int i = 0; i < org_icon.length; i++) {//            org_icon[i] = new ImageIcon(org_image[i]);//        }////        for (int i = 0; i < ch_icon.length; i++) {//            ch_icon[i] = new ImageIcon(ch_image[i]);//        }//////        tb.setBackground(Color.white);//        tb.setLayout(new FlowLayout());//////        JButton[] btn = new JButton[9];////        for (int i = 0; i < btn.length; i++) {//            btn[i] = new JButton(org_icon[i]);//            tb.add(btn[i]);//            btn[i].setPreferredSize(new Dimension(40, 40));//            btn[i].setRolloverIcon(ch_icon[i]);//            btn[i].setBorderPainted(true);//            tb.addSeparator();//        }////        tb.addSeparator();////        JLabel sizelabel = new JLabel("Text Size");//        sizelabel.setPreferredSize(new Dimension(60, 40));//        tb.add(sizelabel);//        tb.add(spinner);////        tb.addSeparator();////        JLabel fontlabel = new JLabel("Fonts");//        fontlabel.setPreferredSize(new Dimension(40,40));//        combo.addItem("맑은 고딕");//        combo.addItem("궁서체");//        combo.addItem("함초롱바탕");//        tb.add(fontlabel);//        tb.add(combo);    }}